{"ast":null,"code":"import { unstable_useId as useId } from '@mui/utils';\nimport { useTabsContext } from '../TabsUnstyled';\nimport { useCompoundItem } from '../utils/useCompoundItem';\nfunction tabPanelValueGenerator(otherTabPanelValues) {\n  return otherTabPanelValues.size;\n}\n\n/**\n *\n * Demos:\n *\n * - [Unstyled Tabs](https://mui.com/base/react-tabs/#hooks)\n *\n * API:\n *\n * - [useTabPanel API](https://mui.com/base/react-tabs/hooks-api/#use-tab-panel)\n */\nfunction useTabPanel(parameters) {\n  var valueParam = parameters.value,\n    idParam = parameters.id;\n  var context = useTabsContext();\n  if (context === null) {\n    throw new Error('No TabContext provided');\n  }\n  var selectedTabValue = context.value,\n    getTabId = context.getTabId;\n  var id = useId(idParam);\n  var _useCompoundItem = useCompoundItem(valueParam, id, tabPanelValueGenerator),\n    value = _useCompoundItem.id;\n  var hidden = value !== selectedTabValue;\n  var correspondingTabId = value !== undefined ? getTabId(value) : undefined;\n  var getRootProps = function getRootProps() {\n    return {\n      'aria-labelledby': correspondingTabId != null ? correspondingTabId : undefined,\n      hidden: hidden,\n      id: id != null ? id : undefined\n    };\n  };\n  return {\n    hidden: hidden,\n    getRootProps: getRootProps\n  };\n}\nexport default useTabPanel;","map":null,"metadata":{},"sourceType":"module"}