{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\Projects\\\\Keeper\\\\Client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport * as React from 'react';\nimport { unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/utils';\nimport { CompoundComponentContext } from './useCompound';\nexport function useCompoundItem(id, itemMetadata, missingKeyGenerator) {\n  var context = React.useContext(CompoundComponentContext);\n  if (context === null) {\n    throw new Error('useCompoundItem must be used within a useCompoundParent');\n  }\n  var registerItem = context.registerItem;\n  var _React$useState = React.useState(id),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    registeredId = _React$useState2[0],\n    setRegisteredId = _React$useState2[1];\n  useEnhancedEffect(function () {\n    var _registerItem = registerItem(id, itemMetadata, missingKeyGenerator),\n      returnedId = _registerItem.id,\n      deregister = _registerItem.deregister;\n    setRegisteredId(returnedId);\n    return deregister;\n  }, [registerItem, itemMetadata, missingKeyGenerator, id]);\n  return {\n    id: registeredId,\n    index: registeredId !== undefined ? context.getItemIndex(registeredId) : -1,\n    totalItemCount: context.totalSubitemCount\n  };\n}","map":null,"metadata":{},"sourceType":"module"}